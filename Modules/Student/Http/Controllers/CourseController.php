<?php

namespace Modules\Student\Http\Controllers;

use App\Models\Course;
use App\Models\EnrollCourseRequest;
use App\Models\StudentCourse;
use Illuminate\Contracts\Support\Renderable;
use Illuminate\Http\Request;
use Illuminate\Routing\Controller;
use Modules\Base\Http\Controllers\BaseController;

class CourseController extends BaseController
{


    protected $config = array(
        'addBtn' => false,
        'editBtn' => false,
        'deleteBtn' => false,
        'deleteGroupAction' => false,
        'deleteAction' => false,
        'importBtn' => false,
        'trash' => false,
        'showAction' => false,
        'status_btn' => true,
        'slot' => 'dash.list.components.student_course'
    );


    protected $appended_actions = array(
        'enroll'
    );

    public function getQuery()
    {
        /*
         * ->whereHas('specializations',function ($query){
            $query->where('id',auth()->user()->specialization_id);
        })
         */
        $q = parent::getQuery(); // TODO: Change the autogenerated stub
        $requestValue = get(explode(',', get(request()->get('search'), 'value')), 1, null);
        $q->where(function ($inner) use ($requestValue) {
            $inner->whereHas('studentRequest', function ($q) use ($requestValue) {
                if ($requestValue)
                    $q->where('status', $requestValue);
                else
                    $q->where('status', '!=', 'accepted');
            })->orWhereDoesntHave('studentRequest');
        });
        return $q;
    }

    public function enroll(Request $request)
    {
        $course = Course::find($request->get('id'));
        $hours_count = current_semester_hours_count(auth()->user());
        if (($hours_count + $course->hour_number) > current_semester()->number_of_hour)
            return redirect()->back()->withErrors('لقد تجاوزت عدد الساعات المسموح بها للفصل الحالي');

        $model = EnrollCourseRequest::create(array(
            'student_id' => auth()->id(),
            'course_id' => $request->get('id'),
            'course_data' => Course::find($request->get('id')),
            'student_data' => auth()->user(),
            'status' => 'pending'
        ));
        return response()->json(array('status' => true, 'model' => $model));
    }
}
